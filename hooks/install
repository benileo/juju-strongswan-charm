#!/usr/bin/env python3


from strongswan.archive import (
	install_pkgs
)
from strongswan.sysctl import(
	cp_sysctl_file,
	sysctl
)
from strongswan.iptables import(
	iptables
)
from strongswan.hosts import(
	cp_hosts_file,
	flush_hosts_file
)
from strongswan.openssl import(
	generate_ca,
	generate_cert
)
from charmhelpers.core import (
	hookenv
)

# global config 
config = hookenv.config()

def pre_install():
	iptables()
	cp_sysctl_file()
	sysctl()
	cp_hosts_file()
	
		
def install():
	install_src = config.get('source')

	hookenv.log("Attempting to install Strongswan from {}".format(
		install_src
		), level=hookenv.INFO
	)
	
	# install from the archives
	if install_src == 'distro':
		install_pkgs()

	# install from upstream source (github)
	elif install_src == 'upstream':
		pass

	#install from ppa
	elif install_src == 'ppa' : 
		pass

	else:
		hookenv.log("Install Source does not exist", level=hookenv.ERROR )
		raise


def post_install():
	# check to make sure that /etc/ipsec.d/ directories were created
	if config.get("authentication_method") == 'x509':
		generate_ca()
		generate_csr('server')
		sign_cert('server')


if __name__ == "__main__":
	hookenv.log("Running the install hook", level=hookenv.INFO )
	pre_install()
	install()
	post_install()
	hookenv.log("Install hook has completed", level=hookenv.INFO )